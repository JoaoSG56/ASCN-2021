
- name: kubeadm reset
  shell: kubeadm reset --force

- name: cleanup before adm init
  shell: |
          systemctl stop kubelet
          systemctl stop docker
          rm -rf /var/lib/cni/
          rm -rf /var/lib/kubelet/*
          rm -rf /etc/cni/
          ifconfig cni0 down
          ifconfig flannel.1 down
          ifconfig docker0 down
          ip link set cni0 down
          brctl delbr cni0
          systemctl restart kubelet
          systemctl restart docker

- name: kubeadm init
  shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address={{ app_master_ip }}
  # args:
  #   chdir: $HOME
  #   creates: cluster_initialized.txt

- name: create .kube directory
  #become: yes
  #become_user : kube
  file:
    path: .kube
    state: directory
    #mode: 0755

- name: copies admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: .kube/config
    remote_src: yes
    #owner: kube

- name: permission
  shell: chown $(id -u):$(id -g) .kube/config


- name: Delete --port=0 from kube-scheduler
  lineinfile: 
    dest: /etc/kubernetes/manifests/kube-scheduler.yaml        
    state: absent
    regexp: '^\s*- --port=0$'

- name: Restart Kubelet
  service:
    name: kubelet
    state: restarted

- name: install Pod network
  #become: yes
  #become_user: kube
  become: no
  shell: kubectl apply -f ansible/kube-flannel.yaml


- name: Get the token for joining the worker nodes
  #become: yes
  #become_user: kube
  become: no
  shell: kubeadm token create  --print-join-command
  register: kubernetes_join_command

# - debug:
#   msg: "{{ kubernetes_join_command.stdout }}"

- name: Copy join command to local file.
  local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777
