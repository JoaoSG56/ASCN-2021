apiVersion: v1
kind: Service
metadata:
  name: wikijs
spec:
  type: NodePort
  selector:
    app: wikijs
  ports:
      # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
    - port: 8000 #exported to cluster
      targetPort: 8000 #used to send requests to the pod
      # Optional field
      # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
      nodePort: 30007 #exported to the "outside"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wikijs
  labels:
    app: wikijs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wikijs
  template:
    metadata:
      labels:
        app: wikijs
    spec:
      containers:
      - name: wikijs
        image: requarks/wiki:2
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: wikijs-config
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              key: DB_PORT
              name: wikijs-config
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              key: DB_USER
              name: wikijs-config
        - name: DB_TYPE
          valueFrom:
            configMapKeyRef:
              key: DB_TYPE
              name: wikijs-config  
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: wikijs-config  
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: postgres 
              key: password 
      
        # env:
        # - name: DB_HOST
        #   value: mysql
        # - name: DB_DATABASE
        #   value: wikijs
        # - name: DB_USERNAME
        #   value: wikijsuser
        # - name: DB_PASSWORD
        #   value: "54321"
        ports:
        - containerPort: 8000
          name: wikijs
      # topologySpreadConstraints:
      # - maxSkew: 1
      #   topologyKey: kubernetes.io/hostname
      #   whenUnsatisfiable: DoNotSchedule
      #   labelSelector:
      #     matchLabels:
      #       app: swap
